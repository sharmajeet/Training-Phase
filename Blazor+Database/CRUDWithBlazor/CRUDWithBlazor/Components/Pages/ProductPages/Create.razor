@page "/products/create"
@using Microsoft.EntityFrameworkCore
@using CRUDWithBlazor.Models
@inject IDbContextFactory<CRUDWithBlazor.Data.DBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>
<h2 class="text-center text-primary display-4 shadow-lg p-3 mb-5 bg-light rounded">Create Product</h2>

<hr />
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <EditForm method="post" Model="Product" OnValidSubmit="AddProduct" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <div class="mb-3">
                    <label for="name" class="form-label fw-bold">Name:</label> 
                    <InputText id="name" @bind-Value="Product.Name" class="form-control" /> 
                    <ValidationMessage For="() => Product.Name" class="text-danger" /> 
                </div>        

                <div class="mb-3">
                    <label for="price" class="form-label fw-bold">Price:</label> 
                    <InputNumber id="price" @bind-Value="Product.Price" class="form-control" /> 
                    <ValidationMessage For="() => Product.Price" class="text-danger" /> 
                </div>        

                <div class="mb-3">
                    <label for="qty" class="form-label fw-bold">Qty:</label> 
                    <InputNumber id="qty" @bind-Value="Product.Qty" class="form-control" /> 
                    <ValidationMessage For="() => Product.Qty" class="text-danger" /> 
                </div>        

                <button type="submit" class="btn btn-success w-100">Create</button>
            </EditForm>
        </div>
    </div>
</div>

<div class="text-center mt-3">
    <a href="/products" class="btn btn-secondary">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Product Product { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProduct()
    {
        using var context = DbFactory.CreateDbContext();
        context.Product.Add(Product);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/products");
    }
}
