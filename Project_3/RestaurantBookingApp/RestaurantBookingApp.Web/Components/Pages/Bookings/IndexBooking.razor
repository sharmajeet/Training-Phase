@page "/bookings"

@using Newtonsoft.Json
@using RestaurantApp_Model.Entities
@using RestaurantApp_Model.Models
@using System.Text
@using Microsoft.AspNetCore.Components.Forms

@inject HttpClient Http

<h3>Create a Booking</h3>

@if (ErrorMessage != null)
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

@if (SuccessMessage != null)
{
    <div class="alert alert-success">@SuccessMessage</div>
}

<EditForm Model="@NewBooking" OnValidSubmit="@HandleSubmit" FormName="BookingForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="tableId">Table ID</label>
        <InputNumber id="tableId" class="form-control" @bind-Value="NewBooking.TableId" placeholder="Enter Table ID" />
    </div>

    <div class="form-group">
        <label for="customerName">Customer Name</label>
        <InputText id="customerName" class="form-control" @bind-Value="NewBooking.CustomerName" placeholder="Enter Customer Name" />
    </div>

    <div class="form-group">
        <label for="contactNumber">Contact Number</label>
        <InputText id="contactNumber" class="form-control" @bind-Value="NewBooking.ContactNumber" placeholder="Enter Contact Number" />
    </div>

    <div class="form-group">
        <label for="date">Date</label>
        <InputDate id="date" class="form-control" @bind-Value="NewBooking.Date" />
    </div>

    <div class="form-group">
        <label for="time">Time</label>
        <input type="time" id="time" class="form-control" />
    </div>

    <div class="form-group">
        <label for="specialRequest">Special Request</label>
        <InputTextArea id="specialRequest" class="form-control" @bind-Value="NewBooking.SpecialRequest" placeholder="Enter Special Request" />
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    public BookingsModel NewBooking { get; set; } = new()
        {
            TableId = 0,
            CustomerName = string.Empty,
            ContactNumber = string.Empty,
            Date = DateTime.Now,
            Time = TimeSpan.FromHours(12),
            SpecialRequest = string.Empty
        };

    public string? ErrorMessage { get; set; }
    public string? SuccessMessage { get; set; }

    private async Task HandleSubmit()
    {
        try
        {
            ErrorMessage = null;
            SuccessMessage = null;

            // Serialize the payload
            var jsonContent = JsonConvert.SerializeObject(NewBooking);

            var stringContent = new StringContent(jsonContent, Encoding.UTF8, "application/json");

            // Send the POST request
            var response = await Http.PostAsync("https://localhost:7564/api/Bookings", stringContent);

            // Read and parse the response
            var responseContent = await response.Content.ReadAsStringAsync();

            var result = JsonConvert.DeserializeObject<BaseResponseModel>(responseContent);

            if (result != null && result.Success)
            {
                SuccessMessage = "Booking successfully created!";

                // Reset the form
                NewBooking = new BookingsModel
                    {
                        TableId = 0,
                        CustomerName = string.Empty,
                        ContactNumber = string.Empty,
                        Date = DateTime.Now,
                        Time = TimeSpan.FromHours(12),
                        SpecialRequest = string.Empty
                    };
            }
            else
            {
                ErrorMessage = result?.ErrorMessage ?? "Unknown error while creating booking.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Exception while creating booking: {ex.Message}";
        }
    }
}
