@page "/booking"
@using Newtonsoft.Json;
@using Restaurant_Models.Entities;
@using Restaurant_Models.Models;
@using static RestaurantApp.Web.Components.Pages.Tables.IndexTables;
@inject ApiClient ApiClient
@inject IToastService ToastService
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>

<p class="text-center text-primary shadow-lg p-2 mb-2 bg-light-subtle rounded fs-1"
   style="font-family: 'Arial, sans-serif'; font-weight: bold; letter-spacing: 1px;">
    List Of All Bookings
</p>

@if (BookingModels == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <a class="btn btn-primary float-end" href="/booking/create"> <i class="bi bi-plus"></i> Create</a>
    <table class="table table-striped">
        <thead>
            <tr>
                @* <th>Table ID</th> *@
                <th>Table Property</th>
                <th>Customer Name</th>
                <th>Contact Number</th>
                <th>Date</th>
                <th>Time From</th>
                <th>Time To</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var booking in PaginatedBookings)
            {
                <tr>
                    @* <td>@booking.TableId</td> *@
                    <td>
                        @if (TableModels != null)
                        {
                            var table = TableModels.FirstOrDefault(t => t.Id == booking.TableId);
                            if (table != null)
                            {
                                <div>
                                    <span>Table Tag: @table.TableTag</span><br />
                                    <span>Capacity: @table.Capacity</span>
                                </div>
                            }
                            else
                            {
                                <span>No table found</span>
                            }
                        }
                    </td>
                    <td>@booking.CustomerName</td>
                    <td>@booking.CustomerPhone</td>
                    <td>@booking.BookingDate.ToString("dd-MM-yyyy")</td>
                    <td>@DateTime.Parse(booking.TimeFrom).ToString("HH:mm")</td>
                    <td>@DateTime.Parse(booking.TimeTo).ToString("HH:mm")</td>
                    <td>
                        <a class="btn btn-warning" href="/booking/update/@booking.TableId"> <i class="bi bi-pencil-square"></i> Edit</a>
                        <button class="btn btn-dark" @onclick="() => { DeleteId = booking.TableId; Model.Open(); }"><i class="bi bi-trash-fill"></i>Cancel</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-between mt-3">
        <button class="btn btn-primary" @onclick="PreviousPage" disabled="@IsFirstPage">Previous</button>
        <span>Page @CurrentPage of @TotalPages</span>
        <button class="btn btn-primary" @onclick="NextPage" disabled="@IsLastPage">Next</button>
    </div>
}

<AppModel @ref="Model">
    <Title>Notification</Title>
    <Body>
        Do you sure want to delete this booking?
    </Body>
    <Footer>
        <button type="button" class="btn btn-primary" style="width:80px" @onclick="HandleDelete">Yes</button>
        <button type="button" class="btn btn-secondary" style="width:80px" @onclick="() => Model.Close()">Cancel</button>
    </Footer>
</AppModel>
